# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

# Curso da Alura: 
# https://cursos.alura.com.br/course/integracao-continua-pipelines-testes-automatizados-github-actions/task/166257?b2cUser=true

name: Integração Contínua

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  ci:
    runs-on: ubuntu-latest # Ambiente onde vai ser rodado
    steps:
    - uses: actions/checkout@v4 # Seria tipo um "git checkcout -b" para pegar a branch

    - name: Set up Go # Nome da etapa
      uses: actions/setup-go@v4 # Instala a linguagem GO.
      with:
        go-version: '1.22' # Seta a versão dela

    - name: Inicia banco
      run: docker compose up -d postgres # Comando para rodar o docker-compose so do postgres

    - name: Lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: v1.59
        args: controllers/ database/ models/ routes/

    - name: Test
      run: DB_HOST=${{ secrets.DB_HOST }} DB_PASSWORD=${{ secrets.DB_PASSWORD }} DB_USER=${{ secrets.DB_USER }} DB_NAME=${{ secrets.DB_NAME }} DB_PORT=${{ secrets.DB_PORT }} go test -v main_test.go
    
    - name: Build
      run: go build main.go

    - name: Projeto compilado
      uses: actions/upload-artifact@v4
      with:
        name: projeto_compilado
        path: main
